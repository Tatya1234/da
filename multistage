#include<stdio.h>
#include<limits.h>
#define INF INT_MAX
#define V 8

int min(int a,int b)
{
    return (a<b)? a:b;
}

int minCost(int cost[][V])
{
    int dist[V];
    dist[V-1]=0;

    for(int i=V-2;i>=0;i--)
    {
        dist[i]=INF;
        for(int j=i;j<V;j++)
        {
            if(cost[i][j]==INF) continue;
            dist[i]=min(dist[i],cost[i][j]+dist[j]);
        }
    }
    return dist[0];
}

int main()
{
    int cost[V][V]={{INF,1,2,5,INF,INF,INF,INF},
                    {INF,INF,INF,INF,4,11,INF,INF},
                    {INF,INF,INF,INF,INF,5,16,INF},
                    {INF,INF,INF,INF,INF,INF,2,INF},
                    {INF,INF,INF,INF,INF,INF,INF,18},
                    {INF,INF,INF,INF,INF,INF,INF,13},
                    {INF,INF,INF,INF,INF,INF,INF,2},
                    {INF,INF,INF,INF,INF,INF,INF,INF},
                    };
    
    int minCostPath=minCost(cost);
    printf("MInimum path is %d ",minCostPath);
}

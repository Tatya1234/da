#include <stdio.h>

void swap(int *a, int *b)
{
    int temp = *a;
    *a = *b;
    *b = temp;
}

int partition(int a[],int low,int high)
{
    int pivot=a[low];
    int i=low;
    int j=high;
    while(i<j)
    {
        while(a[i]<=pivot && i<=high)
        {
            i++;
        }
        while(a[j]>pivot && j>=low)
        {
            j--;
        }
        if(i<j)
            swap(&a[i],&a[j]);
    }
    swap(&a[low],&a[j]);
    return j;
}

int quickSort(int a[],int low,int high)
{
    if(low<high)
    {
        int partIndex=partition(a,low,high);
        quickSort(a,low,partIndex-1);
        quickSort(a,partIndex+1,high);
    }
}

int main()
{
    int a[]={10,7,8,9,1,5};
    int n=sizeof(a)/sizeof(a[0]);
    quickSort(a,0,n-1);

    for (int i = 0; i < n; i++)
    {
        printf("%d\t",a[i]);
    }
    
}
